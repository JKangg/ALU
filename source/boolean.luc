module boolean (
    input a[16],
    input b[16],
    input alufn_signal[6],
    output out[16]
  ) {

  
  always {

    case(alufn_signal[3:0]){
    
      b1000: out = a & b; //AND
      b1001: out = ~(a & b); //NAND
  
      b1110: out = a | b; //OR
      b1111: out = ~(a | b); //NOR 
        
      b0110: out = a ^ b; //XOR
      b0111: out = ~(a ^ b); //XNOR
        
      b1010: out = a; //A
      b1011: out = ~a; //not A 
      
      b1100: out = b; //B 
      b1101: out = ~b; //not B 
      
      default:
        out = 16b0;
    }
   
  }
}
