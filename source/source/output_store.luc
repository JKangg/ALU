module output_store (
    input clk,  // clock
    input selectorA, // select input for A
    input selectorB, // select input for B
    input store_or_show,
    // map switches to digits
    input switches1[8],
    input switches0[8],    
    // outputs a and b
    output outA[16],
    output outB[16]
  ) {

  .clk(clk){
    edge_detector detectA(#RISE(1), #FALL(0));
    edge_detector detectB(#RISE(1), #FALL(0));
    button_conditioner buttonA(.in(selectorA)); 
    button_conditioner buttonB(.in(selectorB));
    
    // 2 flip flops to store A and B
    dff memoryA[16];
    dff memoryB[16];
   
  }
  
  always {   
    detectA.in = buttonA.out;
    detectB.in = buttonB.out;
    
    //store the inputs of the switches to memoryA or memoryB respectively
    if (store_or_show == 1){  
    if(detectA.out){
      memoryA.d[15:8] = switches1;
      memoryA.d[7:0] = switches0;      
    }
    if(detectB.out){
      memoryB.d[15:8] = switches1;
      memoryB.d[7:0] = switches0;
      }
      
    // assign output of memoryA and memoryB to outA and outB respectively
    outA = memoryA.q;
    outB = memoryB.q;
}else{
    
    // no changes made if not in set mode
    outA = memoryA.q;
    outB = memoryB.q;
      }
}
}